/*Copyright (c) 2017-2018 vanenburgsoftware.com All Rights Reserved.
 This software is the confidential and proprietary information of vanenburgsoftware.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with vanenburgsoftware.com*/

package com.hrdb.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wavemaker.commons.wrapper.IntegerWrapper;
import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.file.model.Downloadable;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;

import com.hrdb.service.HrdbQueryExecutorService;
import com.hrdb.models.query.*;

@RestController(value = "Hrdb.QueryExecutionController")
@RequestMapping("/hrdb/queryExecutor")
@Api(value = "QueryExecutionController", description = "controller class for query execution")
public class QueryExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(QueryExecutionController.class);

    @Autowired
    private HrdbQueryExecutorService queryService;

    @RequestMapping(value = "/queries/toBeApprovedLeaves", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "TO get pending leaves")
    public Page<ToBeApprovedLeavesResponse> executeToBeApprovedLeaves(@RequestParam(value = "data") String data, Pageable pageable) {
        LOGGER.debug("Executing named query: toBeApprovedLeaves");
        Page<ToBeApprovedLeavesResponse> _result = queryService.executeToBeApprovedLeaves(data, pageable);
        LOGGER.debug("got the result for named query: toBeApprovedLeaves, result:{}", _result);
        return _result;
    }

    @ApiOperation(value = "Returns downloadable file for query toBeApprovedLeaves")
    @RequestMapping(value = "/queries/toBeApprovedLeaves/export/{exportType}", method = RequestMethod.GET, produces = "application/octet-stream")
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Downloadable exportToBeApprovedLeaves(@PathVariable("exportType") ExportType exportType, @RequestParam(value = "data") String data, Pageable pageable) {
        LOGGER.debug("Exporting named query: toBeApprovedLeaves");

        return queryService.exportToBeApprovedLeaves(exportType, data, pageable);
    }

    @RequestMapping(value = "/queries/LeaveAction", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "set leave status")
    public IntegerWrapper executeLeaveAction(@Valid @RequestBody LeaveActionRequest leaveActionRequest) {
        LOGGER.debug("Executing named query: LeaveAction");
        Integer _result = queryService.executeLeaveAction(leaveActionRequest);
        LOGGER.debug("got the result for named query: LeaveAction, result:{}", _result);
        return new IntegerWrapper(_result);
    }

}


